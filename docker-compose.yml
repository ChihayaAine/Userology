version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: usercopy-backend
    ports:
      - "8090:8090"
    environment:
      - NODE_ENV=development
      - PORT=8090
      - FRONTEND_URL=http://localhost:8089
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
      - /app/node_modules
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: usercopy-frontend
    ports:
      - "8089:8089"
    environment:
      - NODE_ENV=development
      - PORT=8089
      - NEXT_PUBLIC_API_URL=http://localhost:8090/api
    env_file:
      - ./frontend/.env
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped

  # Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: usercopy-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    profiles:
      - production

volumes:
  backend_node_modules:
  frontend_node_modules:
  frontend_next:
